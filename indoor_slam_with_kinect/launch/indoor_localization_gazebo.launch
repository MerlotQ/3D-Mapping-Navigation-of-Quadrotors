<?xml version="1.0"?>

<launch>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <include file="$(find indoor_slam_with_kinect)/launch/playground.launch"/>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find indoor_slam_with_kinect)/launch/spawn_quadrotor.launch" >
    <!--Commented laser and added kinect -->
    <!--arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/-->
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_with_kinect.gazebo.xacro"/>

  </include>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <!-- Start SLAM system
  <include file="$(find hector_mapping)/launch/mapping_default.launch">
    <arg name="odom_frame" value="world"/>
  </include> -->

  <!-- Launch Octomap server and load the map -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen" args ="$(find indoor_slam_with_kinect)/octomaps/fetch_robotics.bt">
		<param name="resolution" value="0.05" />

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/camera/depth/points" />

    <!-- Remove ground from the map -->
    <param name="filter_ground" value="true"/>

  </node>

  <!-- Humanoid Localization -->
  <node pkg="humanoid_localization" type="localization_node" name="localization_node">
		<remap from="camera/depth/points" to="point_cloud" />
    <remap from="raw_imu" to="imu" />
    <param name="odom_frame_id" value="world" />
    <param name="base_frame_id" value="base_link" />
    <param name="init_global" value="true" />
    <param name="num_sensor_beams" value="1000" />

	</node>

  <arg name="rviz_file" default="$(find indoor_slam_with_kinect)/rviz/indoor_localization.rviz" />
  <!-- Start rviz visualization with preset config -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_file)"/>

  <!-- Static TF for map -->
  <node pkg="tf" type="static_transform_publisher" name="map_world_broadcaster" args="0 0 0 0 0 0 map world 100"/>

  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <param name="rate" value="100"/>
    <rosparam command="load" file="$(find indoor_slam_with_kinect)/launch/includes/joints.yaml"/>
  </node> -->

</launch>
